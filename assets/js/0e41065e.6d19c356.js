"use strict";(self.webpackChunkcorsaircoalition_github_io=self.webpackChunkcorsaircoalition_github_io||[]).push([[833],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(a),d=n,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return a?r.createElement(h,i(i({ref:t},c),{},{components:a})):r.createElement(h,i({ref:t},c))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9010:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const o={title:"Introduction"},i="Generally Genius (GG) Bot Framework",l={unversionedId:"introduction",id:"introduction",title:"Introduction",description:"Generals.io (GIO) is a fast-paced real-time strategy game with imperfect information within a 2D grid world. Players expand their land and battle with enemies in attempt to capture each others' generals. Capturing an opponent's general gives a player full control of their territory.",source:"@site/docs/1-introduction.md",sourceDirName:".",slug:"/introduction",permalink:"/introduction",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Introduction"},sidebar:"defaultSidebar",next:{title:"Installation and Setup",permalink:"/setup"}},s={},p=[{value:"Components",id:"components",level:2},{value:"Required",id:"required",level:3},{value:"Bot Logic",id:"bot-logic",level:3},{value:"Python",id:"python",level:4},{value:"TypeScript",id:"typescript",level:4},{value:"Development Tools",id:"development-tools",level:3},{value:"Interactive Data Analysis",id:"interactive-data-analysis",level:3},{value:"Framework Design",id:"framework-design",level:2},{value:"Support",id:"support",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...o}=e;return(0,n.kt)(u,(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"generally-genius-gg-bot-framework"},"Generally Genius (GG) Bot Framework"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://generals.io/"},"Generals.io (GIO)")," is a fast-paced real-time strategy game with imperfect information within a 2D grid world. Players expand their land and battle with enemies in attempt to capture each others' generals. Capturing an opponent's general gives a player full control of their territory."),(0,n.kt)("p",null,"GIO presents an excellent testbed for AI agents through its simple set of action (up, down, left, right) in a complex state space. A gameplay supports up to 12 players, which makes it particularly challenging to select an appropriate strategy."),(0,n.kt)("p",null,"We present an agent development and data collection framework for GIO:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"highly modular framework using ",(0,n.kt)("a",{parentName:"li",href:"https://microservices.io/"},"microservices architecture")),(0,n.kt)("li",{parentName:"ul"},"language agnostic - use anything with a ",(0,n.kt)("a",{parentName:"li",href:"https://redis.io/resources/clients/"},"Redis client")),(0,n.kt)("li",{parentName:"ul"},"supports rapid development and testing of AI agents"),(0,n.kt)("li",{parentName:"ul"},"uses ",(0,n.kt)("a",{parentName:"li",href:"https://redis.io/"},"Redis")," message broker for all communication"),(0,n.kt)("li",{parentName:"ul"},"enables real-time data collection and analysis of agent performance"),(0,n.kt)("li",{parentName:"ul"},"includes example notebooks (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/CorsairCoalition/docs/blob/main/gg-analysis.ipynb"},"here")," and ",(0,n.kt)("a",{parentName:"li",href:"https://deepnote.com/workspace/insights-island-2232debf-8efe-49d0-80d9-20d155a36301/project/generalsio-analysis-51d1567e-7054-4223-9aa2-98354e1dc291/notebook/fetch-and-plot-f69012bef9f04e27aae6a600cd811276"},"DeepNote"),") for interactive data analysis")),(0,n.kt)("h1",{id:"architecture"},"Architecture"),(0,n.kt)("h2",{id:"components"},"Components"),(0,n.kt)("h3",{id:"required"},"Required"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://redis.io/"},"Redis")," provides messaging backbone to allow all other components to communicate."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/CorsairCoalition/SergeantSocket"},"SergeantSocket")," - IO module that relays data between game server and bot framework"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/CorsairCoalition/CommanderCortex"},"CommanderCortex")," - User Interface to control and monitor the bot")),(0,n.kt)("h3",{id:"bot-logic"},"Bot Logic"),(0,n.kt)("p",null,"The following components are language-agnostic reference implementations of the inner workings of the bot."),(0,n.kt)("h4",{id:"python"},"Python"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/CorsairCoalition/PyBot/"},"PyBot")," - simple examples for working with this framework")),(0,n.kt)("h4",{id:"typescript"},"TypeScript"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/CorsairCoalition/ArmadaAssault"},"ArmadaAssault")," - generate action recommendations"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/CorsairCoalition/StrategySentinel"},"StrategySentinel")," - selects appropriate action from ArmadaAssault's recommendations")),(0,n.kt)("h3",{id:"development-tools"},"Development Tools"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/CorsairCoalition/ReplayRanger"},"ReplayRanger")," -  replay GIO game events on Redis for bot development"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/CorsairCoalition/Flobot"},"Flobot")," - highly capable bot that serves as a baseline adversary for testing")),(0,n.kt)("h3",{id:"interactive-data-analysis"},"Interactive Data Analysis"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/CorsairCoalition/docs/blob/main/gg-analysis.ipynb"},"GitHub: CorsairCoalition/docs")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://deepnote.com/workspace/insights-island-2232debf-8efe-49d0-80d9-20d155a36301/project/generalsio-analysis-51d1567e-7054-4223-9aa2-98354e1dc291/notebook/fetch-and-plot-f69012bef9f04e27aae6a600cd811276"},"DeepNote"))),(0,n.kt)("h2",{id:"framework-design"},"Framework Design"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Framework Architecture",src:a(4574).Z,width:"1472",height:"1190"})),(0,n.kt)("h1",{id:"user-interface"},"User Interface"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Commander Cortex",src:a(1373).Z,width:"1900",height:"999"})),(0,n.kt)("h2",{id:"support"},"Support"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://discord.com/invite/QP63V5Y"},"Discord: generals.io")," -> #botting")))}m.isMDXComponent=!0},1373:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/commandercortex-7a212dc6a91ac7eb5a921a4299777fd9.png"},4574:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/gg-architecture-24e8d9b207fb6836a3a7db5fd8e5ee4f.png"}}]);