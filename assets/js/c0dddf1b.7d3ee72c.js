"use strict";(self.webpackChunkcorsaircoalition_github_io=self.webpackChunkcorsaircoalition_github_io||[]).push([[137],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3436:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={},i="Installation and Setup",l={unversionedId:"getting-started/setup",id:"getting-started/setup",title:"Installation and Setup",description:"Prerequisites",source:"@site/docs/2-getting-started/1-setup.md",sourceDirName:"2-getting-started",slug:"/getting-started/setup",permalink:"/getting-started/setup",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Getting Started",permalink:"/category/getting-started"},next:{title:"Gameplay Analysis",permalink:"/getting-started/usage"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup",id:"setup",level:2},{value:"Development",id:"development",level:2},{value:"Testing",id:"testing",level:2}],c={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"installation-and-setup"},"Installation and Setup"),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/install"},"Docker")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.docker.com/compose/install"},"Docker Compose"))),(0,r.kt)("p",null,"Use the following commands to test:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ docker version\n$ docker compose version\n")),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Clone or download this repository.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make a copy of the example configuration file, ",(0,r.kt)("inlineCode",{parentName:"p"},"config.json.example")," and change the ",(0,r.kt)("inlineCode",{parentName:"p"},"userId"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"username"),", and other variables as desired."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'$ cp config.json.example config.json\n$ sed -i "s/RANDOMLY_GENERATED_STRING/$(openssl rand -base64 12)/" config.json\n')),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Run background services. This command will start Docker containers for the framework components: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/CorsairCoalition/SergeantSocket"},"SergeantSocket"),", ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/CorsairCoalition/ArmadaAssault"},"ArmadaAssault"),", ",(0,r.kt)("a",{parentName:"li",href:"https://redis.io/"},"Redis"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ docker compose up\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'Ignore the Redis-related warnings. When you see "READY TO PLAY", continue to the next step.')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open another terminal window and navigate to the same directory.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Execute the following command:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ docker compose run commander-cortex\n")),(0,r.kt)("p",null,"The Commander Cortex UI should appear. You are now ready to play against other bots or humans."),(0,r.kt)("h2",{id:"development"},"Development"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Get the component that you want to modify and place it in the same directory."),(0,r.kt)("li",{parentName:"ol"},"Edit ",(0,r.kt)("inlineCode",{parentName:"li"},"docker-compose.yaml")," - replace ",(0,r.kt)("inlineCode",{parentName:"li"},"image:")," with ",(0,r.kt)("inlineCode",{parentName:"li"},"build:"),"."),(0,r.kt)("li",{parentName:"ol"},"Make desired changes and build a fresh image using ",(0,r.kt)("inlineCode",{parentName:"li"},"docker compose build"),".")),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://dev.generals.io/"},"GIO developer documentation"),"."),(0,r.kt)("h2",{id:"testing"},"Testing"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use the ",(0,r.kt)("a",{parentName:"li",href:"https://bot.generals.io/"},"GIO bot server")," to create custom games."),(0,r.kt)("li",{parentName:"ul"},"Human against ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/CorsairCoalition/Flobot"},"Flobot")," (1x speed) - ",(0,r.kt)("a",{parentName:"li",href:"https://bot.generals.io/games/floatbot"},"custom game: floatbot")),(0,r.kt)("li",{parentName:"ul"},"Bot against ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/CorsairCoalition/Flobot"},"Flobot")," (4x speed) - ",(0,r.kt)("a",{parentName:"li",href:"https://bot.generals.io/games/cortex"},"custom game: cortex"))))}u.isMDXComponent=!0}}]);