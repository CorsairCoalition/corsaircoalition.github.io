"use strict";(self.webpackChunkcorsaircoalition_github_io=self.webpackChunkcorsaircoalition_github_io||[]).push([[348],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=a,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2515:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const i={title:"Introduction"},o="Generally Genius (GG) Bot Framework",l={unversionedId:"introduction/index",id:"introduction/index",title:"Introduction",description:"Generals.io (GIO) is a fast-paced real-time strategy game with imperfect information within a 2D grid world. Players expand their land and battle with enemies in attempt to capture each others' generals. Capturing an opponent's general gives a player full control of their territory.",source:"@site/docs/1-introduction/index.md",sourceDirName:"1-introduction",slug:"/introduction/",permalink:"/introduction/",draft:!1,tags:[],version:"current",frontMatter:{title:"Introduction"},sidebar:"defaultSidebar",next:{title:"Architecture",permalink:"/introduction/architecture"}},s={},c=[{value:"Support",id:"support",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"generally-genius-gg-bot-framework"},"Generally Genius (GG) Bot Framework"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://generals.io/"},"Generals.io (GIO)")," is a fast-paced real-time strategy game with imperfect information within a 2D grid world. Players expand their land and battle with enemies in attempt to capture each others' generals. Capturing an opponent's general gives a player full control of their territory."),(0,a.kt)("p",null,"GIO presents an excellent testbed for AI agents through its simple set of action (up, down, left, right) in a complex state space. A gameplay supports up to 12 players, which makes it particularly challenging to select an appropriate strategy."),(0,a.kt)("p",null,"We present an agent development and data collection framework for GIO:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"highly modular framework using ",(0,a.kt)("a",{parentName:"li",href:"https://microservices.io/"},"microservices architecture")),(0,a.kt)("li",{parentName:"ul"},"language agnostic - use anything with a ",(0,a.kt)("a",{parentName:"li",href:"https://redis.io/resources/clients/"},"Redis client")),(0,a.kt)("li",{parentName:"ul"},"supports rapid development and testing of AI agents"),(0,a.kt)("li",{parentName:"ul"},"uses ",(0,a.kt)("a",{parentName:"li",href:"https://redis.io/"},"Redis")," message broker for all communication"),(0,a.kt)("li",{parentName:"ul"},"enables real-time data collection and analysis of agent performance"),(0,a.kt)("li",{parentName:"ul"},"includes example notebooks (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/CorsairCoalition/docs/blob/main/gg-analysis.ipynb"},"here")," and ",(0,a.kt)("a",{parentName:"li",href:"https://deepnote.com/workspace/insights-island-2232debf-8efe-49d0-80d9-20d155a36301/project/generalsio-analysis-51d1567e-7054-4223-9aa2-98354e1dc291/notebook/fetch-and-plot-f69012bef9f04e27aae6a600cd811276"},"DeepNote"),") for interactive data analysis")),(0,a.kt)("h2",{id:"support"},"Support"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://discord.com/invite/QP63V5Y"},"Discord: generals.io")," -> #botting")))}d.isMDXComponent=!0}}]);